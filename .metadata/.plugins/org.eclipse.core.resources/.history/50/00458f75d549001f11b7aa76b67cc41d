package in.shiv.service;

import org.springframework.cloud.client.circuitbreaker.CircuitBreakerFactory;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import in.shiv.binding.Rate;
import io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker;

@Service
public class LoanService {
	
	
	private RestTemplate rest;
	private CircuitBreakerFactory cbFactory;
	
	public LoanService(RestTemplate rest, CircuitBreakerFactory cbFactory) {
		this.rest = rest;
		this.cbFactory = cbFactory;
	}
	
	@CircuitBreaker(name = "loan-service", fallbackMethod = "fallback")
	public Rate gerRate(String type) {
		String url = "http://localhost:8080/rate?type={type}";
		ResponseEntity<Rate> forEntity = rest.getForEntity(url, Rate.class, type);
		return forEntity.getBody();
	}

	public String slow(Throwable e) {
		return cbFactory.create("slow").run(() -> rest.getForObject("/slow", String.class), throwable -> "fallback");
	}
}
